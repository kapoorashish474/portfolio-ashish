{"ast":null,"code":"var _jsxFileName = \"/Users/ashishkapoor/portfolio/src/context/Context.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MensajeIngles from './../language/en.json';\nimport MensajeEspañol from './../language/es.json';\nimport { IntlProvider } from 'react-intl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst langContext = /*#__PURE__*/React.createContext();\nconst LangProvider = ({\n  children\n}) => {\n  _s();\n  let localePorDefecto;\n  let mensajesPorDefecto;\n  const lang = localStorage.getItem('lang');\n  if (lang) {\n    localePorDefecto = lang;\n    if (lang === 'es-ES') {\n      mensajesPorDefecto = MensajeEspañol;\n    } else if (lang === 'en-US') {\n      mensajesPorDefecto = MensajeIngles;\n    } else {\n      localePorDefecto = 'en-US';\n      mensajesPorDefecto = MensajeIngles;\n    }\n  }\n  const [mensaje, setMensaje] = useState(mensajesPorDefecto);\n  const [locale, setLocale] = useState(localePorDefecto);\n  const selectLanguage = language => {\n    switch (language) {\n      case 'es-ES':\n        setMensaje(MensajeEspañol);\n        setLocale('es-ES');\n        localStorage.setItem('lang', 'es-ES');\n        break;\n      case 'en-US':\n        setMensaje(MensajeIngles);\n        setLocale('en-US');\n        localStorage.setItem('lang', 'en-US');\n        break;\n      default:\n        setMensaje(MensajeIngles);\n        setLocale('en-US');\n        localStorage.setItem('lang', 'en-US');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(langContext.Provider, {\n    value: {\n      selectLanguage: selectLanguage\n    },\n    children: /*#__PURE__*/_jsxDEV(IntlProvider, {\n      locale: locale,\n      messages: mensaje,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(LangProvider, \"q/nvsHQmzSLSXqRnKylTdbSrpm8=\");\n_c = LangProvider;\nexport { LangProvider, langContext };\nvar _c;\n$RefreshReg$(_c, \"LangProvider\");","map":{"version":3,"names":["React","useState","MensajeIngles","MensajeEspañol","IntlProvider","jsxDEV","_jsxDEV","langContext","createContext","LangProvider","children","_s","localePorDefecto","mensajesPorDefecto","lang","localStorage","getItem","mensaje","setMensaje","locale","setLocale","selectLanguage","language","setItem","Provider","value","messages","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ashishkapoor/portfolio/src/context/Context.jsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport MensajeIngles from './../language/en.json';\r\nimport MensajeEspañol from './../language/es.json';\r\nimport {IntlProvider} from 'react-intl';\r\n\r\nconst langContext = React.createContext();\r\n\r\n\r\nconst LangProvider = ({children}) => {\r\n    let localePorDefecto;\r\n\tlet mensajesPorDefecto;\r\n\tconst lang = localStorage.getItem('lang');\r\n\r\n\tif(lang){\r\n\t\tlocalePorDefecto = lang\r\n\r\n\t\tif(lang === 'es-ES'){\r\n\t\t\tmensajesPorDefecto = MensajeEspañol;\r\n\t\t} else if(lang === 'en-US'){\r\n\t\t\tmensajesPorDefecto = MensajeIngles;\r\n\t\t} else {\r\n\t\t\tlocalePorDefecto = 'en-US'\r\n\t\t\tmensajesPorDefecto = MensajeIngles;\r\n\t\t}\r\n\t}\r\n\r\n    const [mensaje, setMensaje] = useState(mensajesPorDefecto);\r\n    const [locale, setLocale] = useState(localePorDefecto);\r\n\r\n    const selectLanguage = (language) =>{\r\n        switch (language) {\r\n            case 'es-ES':\r\n                setMensaje(MensajeEspañol);\r\n                setLocale('es-ES');\r\n                localStorage.setItem('lang', 'es-ES');\r\n                break;\r\n            case 'en-US':\r\n                setMensaje(MensajeIngles);\r\n                setLocale('en-US');\r\n                localStorage.setItem('lang', 'en-US');\r\n                break;\r\n            default:\r\n                setMensaje(MensajeIngles);\r\n                setLocale('en-US');\r\n                localStorage.setItem('lang', 'en-US');\r\n        }\r\n    }\r\n    return (\r\n        <langContext.Provider value={{selectLanguage: selectLanguage}}>\r\n            <IntlProvider locale={locale} messages={mensaje}>\r\n                {children}\r\n            </IntlProvider>\r\n        </langContext.Provider>\r\n    );\r\n};\r\n\r\nexport {LangProvider, langContext};"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,cAAc,MAAM,uBAAuB;AAClD,SAAQC,YAAY,QAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,gBAAGP,KAAK,CAACQ,aAAa,CAAC,CAAC;AAGzC,MAAMC,YAAY,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACjC,IAAIC,gBAAgB;EACvB,IAAIC,kBAAkB;EACtB,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EAEzC,IAAGF,IAAI,EAAC;IACPF,gBAAgB,GAAGE,IAAI;IAEvB,IAAGA,IAAI,KAAK,OAAO,EAAC;MACnBD,kBAAkB,GAAGV,cAAc;IACpC,CAAC,MAAM,IAAGW,IAAI,KAAK,OAAO,EAAC;MAC1BD,kBAAkB,GAAGX,aAAa;IACnC,CAAC,MAAM;MACNU,gBAAgB,GAAG,OAAO;MAC1BC,kBAAkB,GAAGX,aAAa;IACnC;EACD;EAEG,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAACY,kBAAkB,CAAC;EAC1D,MAAM,CAACM,MAAM,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAACW,gBAAgB,CAAC;EAEtD,MAAMS,cAAc,GAAIC,QAAQ,IAAI;IAChC,QAAQA,QAAQ;MACZ,KAAK,OAAO;QACRJ,UAAU,CAACf,cAAc,CAAC;QAC1BiB,SAAS,CAAC,OAAO,CAAC;QAClBL,YAAY,CAACQ,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC;QACrC;MACJ,KAAK,OAAO;QACRL,UAAU,CAAChB,aAAa,CAAC;QACzBkB,SAAS,CAAC,OAAO,CAAC;QAClBL,YAAY,CAACQ,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC;QACrC;MACJ;QACIL,UAAU,CAAChB,aAAa,CAAC;QACzBkB,SAAS,CAAC,OAAO,CAAC;QAClBL,YAAY,CAACQ,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC;IAC7C;EACJ,CAAC;EACD,oBACIjB,OAAA,CAACC,WAAW,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAACJ,cAAc,EAAEA;IAAc,CAAE;IAAAX,QAAA,eAC1DJ,OAAA,CAACF,YAAY;MAACe,MAAM,EAAEA,MAAO;MAACO,QAAQ,EAAET,OAAQ;MAAAP,QAAA,EAC3CA;IAAQ;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAE/B,CAAC;AAACnB,EAAA,CA9CIF,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AAgDlB,SAAQA,YAAY,EAAEF,WAAW;AAAE,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}